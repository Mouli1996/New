<Activity mc:Ignorable="sap sap2010 sads" x:Class="InvokeGroupMModule"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="outBStatus" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="inStrAttachmentFilePath" Type="InOutArgument(x:String)" />
    <x:Property Name="Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="inDtGSTID" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="outStrMissingFieldsTemplateFPath" Type="InOutArgument(x:String)" />
    <x:Property Name="intMissingFieldsTable" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="inDTChannelName" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="inMailMsg" Type="InOutArgument(snm:MailMessage)" />
    <x:Property Name="inStrROID" Type="InArgument(x:String)" />
    <x:Property Name="inROContent" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>InvokeGroupMModule_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine DisplayName="Invoke VibrantPDF Module" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID9" DisplayName="PDFToExcel" sap2010:WorkflowViewState.IdRef="State_7">
        <State.Entry>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="PDF to excel conversion invoked" />
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PDFToExcel workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Generic_Modules\PDFToExcelConversion\InvokePDFToExcel.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Able2ExtractPath">[Config("Able2ExtractPath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="inStrAttachmentFilePath">[inStrAttachmentFilePath]</InArgument>
                  <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="inROContent">[inROContent]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </Sequence>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="Trigger Read RO" sap2010:WorkflowViewState.IdRef="Transition_10" Condition="[outBStatus]">
            <Transition.To>
              <State x:Name="__ReferenceID6" DisplayName="VibrantPDFReadRO" sap2010:WorkflowViewState.IdRef="State_6">
                <State.Entry>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_60">
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="Vibrant Read RO invoked" />
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke VibrantPDFReadRO workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="ROAutomation_Modules\VibrantPDFModule\VibrantReadRO.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="outDtFinalTable">[dtROTable]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outstrStartDate">[strBookingStartDate]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outstrEndDate">[strBookingEndDate]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrStartEndIndexes">[inStrAttachmentFilePath]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrActivityMonth">[strBookingMonth]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrRODate" />
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrRONumber">[strROID]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrBrand">[strBrandName]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrClient">[strClientName]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outstrChannel">[strChannelName]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="inStrMissingFieldsTemplateFPath">[outStrMissingFieldsTemplateFPath]</InArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="outMissingFieldsTable">[intMissingFieldsTable]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrDealID">[strDealID]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="outStrGSTIN">[strGSTIN]</OutArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="inDTGSTID">[inDtGSTID]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="inDTChannelName">[inDTChannelName]</InArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="outDTStatusReportTable">[dtStatusReportTable]</OutArgument>
                          <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="inROFilePath">[Environment.CurrentDirectory+"\Input\RO\Converted\"+ Path.GetFileNameWithoutExtension(inStrAttachmentFilePath)+".xlsx"]</InArgument>
                          <OutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="outListMonthRowStartIndexes">[listMonthRowStartIndexes]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </Sequence>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="Trigger PORegistrationAndMOGeneration" sap2010:WorkflowViewState.IdRef="Transition_7" Condition="[outBStatus]">
                    <Transition.To>
                      <State x:Name="__ReferenceID7" DisplayName="PORegistrationAndMOGenerationWithTrafficApprovalAndSpotBooking" sap2010:WorkflowViewState.IdRef="State_5">
                        <State.Entry>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                            <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                              <TryCatch.Variables>
                                <Variable x:TypeArguments="x:Int32" Name="intDeletedRowsCount" />
                              </TryCatch.Variables>
                              <TryCatch.Try>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[intRowIndex]" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[strBookingMonth.Split(&quot;,&quot;.ToCharArray)]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="op" />
                                        </Sequence.Variables>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sd:DataTable">[dtROTableCopy]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sd:DataTable">[dtROTable.Clone()]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sd:DataTable">[dtROTableCopy]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sd:DataTable">[dtROTable.Select().CopyToDataTable()]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sd:DataTable">[dtROTableCopy1]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sd:DataTable">[dtROTable.Clone()]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sd:DataTable">[dtROTableCopy1]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sd:DataTable">[dtROTable.Select().CopyToDataTable()]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[intMonthStartIndex]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[listMonthRowStartIndexes(intRowIndex)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <If Condition="[intRowIndex&lt;(strBookingMonth.Split(&quot;,&quot;.ToCharArray)).Length-1]" sap2010:WorkflowViewState.IdRef="If_7">
                                          <If.Then>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[intMonthEndIndex]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[listMonthRowStartIndexes(intRowIndex+1)-1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                          <If.Else>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[intMonthEndIndex]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[dtROTableCopy.Rows.Count-1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Else>
                                        </If>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[intDeletedRowsCount]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ForEachRow CurrentIndex="[intRowIndex]" DataTable="[dtROTableCopy1]" DisplayName="For Each Row - Getting Spot table for Current Month" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                          <ui:ForEachRow.Body>
                                            <ActivityAction x:TypeArguments="sd:DataRow">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                <If Condition="[intRowIndex&gt;=intMonthStartIndex AND intRowIndex&lt;=intMonthEndIndex]" sap2010:WorkflowViewState.IdRef="If_8">
                                                  <If.Else>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                      <ui:RemoveDataRow Row="{x:Null}" DataTable="[dtROTableCopy]" DisplayName="Remove Data Row" sap2010:WorkflowViewState.IdRef="RemoveDataRow_1" RowIndex="[intRowIndex-intDeletedRowsCount]" />
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[intDeletedRowsCount]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[intDeletedRowsCount+1]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEachRow.Body>
                                        </ui:ForEachRow>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strCurrentBookingMonth]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Current Month---&quot;+strCurrentBookingMonth]" />
                                        <Sequence DisplayName="Start and End Date Sequence" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Int32" Name="intIndexColumnCount" />
                                            <Variable x:TypeArguments="x:Int32" Default="0" Name="intIndex" />
                                            <Variable x:TypeArguments="ui:GenericValue" Name="outStrStartEndIndexes" />
                                            <Variable x:TypeArguments="x:String" Name="strStartCount" />
                                            <Variable x:TypeArguments="x:String" Name="strEndCount" />
                                          </Sequence.Variables>
                                          <Sequence DisplayName="Evaluate Start Date Sequence" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                            <While sap2010:WorkflowViewState.IdRef="While_2">
                                              <While.Variables>
                                                <Variable x:TypeArguments="x:Int32" Name="intIndexRowCount" />
                                              </While.Variables>
                                              <While.Condition>[intIndexColumnCount&lt;dtROTableCopy.Columns.Count-1]</While.Condition>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[intIndexRowCount]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <While sap2010:WorkflowViewState.IdRef="While_1" Condition="[intIndexRowCount&lt;dtROTableCopy.Rows.Count]">
                                                  <If Condition="[String.IsNullOrEmpty(dtROTableCopy.Rows(intIndexRowCount).Item(intIndexColumnCount).ToString) or dtROTableCopy.Rows(intIndexRowCount).Item(intIndexColumnCount).ToString=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_10">
                                                    <If.Then>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[intIndexRowCount]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[intIndexRowCount+1]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:Int32" Name="intCounter" />
                                                        </Sequence.Variables>
                                                        <If Condition="[intCounter=0]" sap2010:WorkflowViewState.IdRef="If_9">
                                                          <If.Then>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[strStartCount]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[(intIndexColumnCount+1).ToString]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Int32">[intIndexRowCount]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Int32">[dtROTableCopy.Rows.Count+1]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Int32">[intIndexColumnCount]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Int32">[dtROTableCopy.Columns.Count]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Then>
                                                        </If>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </While>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[intIndexColumnCount]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[intIndexColumnCount+1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </While>
                                            <If Condition="[strStartCount.ToString.Length=1]" sap2010:WorkflowViewState.IdRef="If_11">
                                              <If.Then>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strStartCount]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["0"+strStartCount.ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Then>
                                            </If>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[outstrStartDate]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Datetime.ParseExact(strStartCount+"-"+strCurrentBookingMonth,"dd-MM-yyyy",system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;SpotStartDate---&quot;+outstrStartDate]" />
                                          </Sequence>
                                          <Sequence DisplayName="Evaluate End Date Sequence" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[intIndexColumnCount]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">30</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <While sap2010:WorkflowViewState.IdRef="While_4">
                                              <While.Variables>
                                                <Variable x:TypeArguments="x:Int32" Name="intIndexRowCount" />
                                              </While.Variables>
                                              <While.Condition>[intIndexColumnCount&gt;=0]</While.Condition>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_56">
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[intIndexRowCount]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[dtROTableCopy.Rows.Count-1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <While sap2010:WorkflowViewState.IdRef="While_3" Condition="[intIndexRowCount&gt;=0]">
                                                  <If Condition="[String.IsNullOrEmpty(dtROTableCopy.Rows(intIndexRowCount).Item(intIndexColumnCount).ToString) or dtROTableCopy.Rows(intIndexRowCount).Item(intIndexColumnCount).ToString=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_12">
                                                    <If.Then>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[intIndexRowCount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[intIndexRowCount-1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strEndCount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[(intIndexColumnCount+1).ToString]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[intIndexRowCount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">-1</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[intIndexColumnCount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">-1</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </While>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[intIndexColumnCount]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[intIndexColumnCount-1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </While>
                                            <If Condition="[strEndCount.ToString.Length=1]" sap2010:WorkflowViewState.IdRef="If_13">
                                              <If.Then>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strEndCount]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["0"+strEndCount]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Then>
                                            </If>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[outstrEndDate]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Datetime.ParseExact(strEndCount+"-"+strCurrentBookingMonth,"dd-MM-yyyy",system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;End Date: &quot;+outstrEndDate]" />
                                          </Sequence>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[outStrStartEndIndexes]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:GenericValue">[strStartCount+" "+strEndCount]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;StartEndIndexes---&quot;+outStrStartEndIndexes]" />
                                        </Sequence>
                                        <ui:OutputDataTable DataTable="[dtROTableCopy]" DisplayName="Output Data Table" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[op]" />
                                        <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Spot Booking Matrix for Month-&quot;+strCurrentBookingMonth+&quot; &quot;+Environment.NewLine+op]" />
                                        <StateMachine DisplayName="State Machine - Execute PO Registration, MO Generation, Traffic Approval and Spot Booking for each month" sap2010:WorkflowViewState.IdRef="StateMachine_3">
                                          <StateMachine.InitialState>
                                            <State x:Name="__ReferenceID2" DisplayName="PORegistrationAndMOGeneration" sap2010:WorkflowViewState.IdRef="State_19">
                                              <State.Entry>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                  <Sequence DisplayName="Click sales menu" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                      <ui:ClickImage ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image 'Sales menu'" sap2010:WorkflowViewState.IdRef="ClickImage_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False">
                                                        <ui:ClickImage.CursorPosition>
                                                          <ui:CursorPosition Position="Center">
                                                            <ui:CursorPosition.OffsetX>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetX>
                                                            <ui:CursorPosition.OffsetY>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetY>
                                                          </ui:CursorPosition>
                                                        </ui:ClickImage.CursorPosition>
                                                        <ui:ClickImage.Image>
                                                          <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAACEAAAAMCAYAAADs1tSHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAB7SURBVDhPzZJBDoAgDAT7/9f2B5geajZrt0Ki4mGi7MDSA+buYzePDWFmZT5DO0QUI9We5JUhVks/HyJcglnn2xwXjDqEpOOv8hXTDxNL4h9Bz47z7ECWh+AiztVFSfhLBy461CWcK99l7cNE7hzuYaey03Gwgx8M4eMA6DgicNeriDwAAAAASUVORK5CYII=" />
                                                        </ui:ClickImage.Image>
                                                        <ui:ClickImage.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='gen21.exe' cls='FNWND*' title='*' /&gt;" WaitForReady="INTERACTIVE" />
                                                        </ui:ClickImage.Target>
                                                      </ui:ClickImage>
                                                      <ui:ClickImage ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image 'Click 'menu item Sales Purchase/Media Order'" sap2010:WorkflowViewState.IdRef="ClickImage_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False">
                                                        <ui:ClickImage.CursorPosition>
                                                          <ui:CursorPosition Position="Center">
                                                            <ui:CursorPosition.OffsetX>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetX>
                                                            <ui:CursorPosition.OffsetY>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetY>
                                                          </ui:CursorPosition>
                                                        </ui:ClickImage.CursorPosition>
                                                        <ui:ClickImage.Image>
                                                          <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAALIAAAAQCAYAAACyXiWNAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIeSURBVGhD7VZBbsMwDMuz972+Yt/ID7omMAOakWTFTYu084GQRFKSiw1Cptvtdp/neWDgo7H9I08/v2YEhj70S+vjIg98A5oXecQRPyK+8yJP07TC0q6Iq7z3XW+4wu/tfUP/RS4LGa2+rC8Vae+pcym+au7RuL5D+fI219/x7qqv5Jm+KqKPkOrT/qwfseci8wOPoLfPgs46czbwiplH4e3H21T3+Ax6+wCr/+jMo36g6yLzskhXn1crv0bReH6lGzVy+Ku65Buv/aobvM4FwHvzQt6LD4/H6xzl4Pd4cw501MG+ag7tqXjyVzr5Ng+D5qbiMxeZYfkWsO7lLc2CerjOaBYHP6C851PN8ynv+YCMhhkAc5o/ozE8zeKZQ25xlv8ImhcZ2OllIQO6pTHv9a8w+nv3LzV7q74yZ6fTHuW9uoLBh/4HdC/7l9zUWZM5VV3yHdTn9C25Nwfaqhvzqr6EbtXApkvc9J6LrMByzSONcwvQPZ/HWxrXqnmcxXMdaVwzz3kGkbelQedcoRrXXm7VEc9cS/c8GXR9I2vk5cg3nWrkps+Lni/oh2bWJY/8XXO0Nnjkle7Fli/Qqz0lb/qCvoo36pAvXEY362x8xTeyp3Oe8TGniLQF3M9eziO/5fVqhsXDH/UoPB6IdJ2LmtHSOG/NYEQ+rZVnqKeFUy7yiOfG9Y+Z8I1I8Yxv5IFz0XOR/jvGRR7xC+J8/wPA3Xg0kY5irAAAAABJRU5ErkJggg==" />
                                                        </ui:ClickImage.Image>
                                                        <ui:ClickImage.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='gen21.exe' cls='#32768' /&gt;" WaitForReady="INTERACTIVE" />
                                                        </ui:ClickImage.Target>
                                                      </ui:ClickImage>
                                                    </Sequence>
                                                  </Sequence>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="Initiating Dentsu PDF PO Registration And MO Generation " />
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PORegistrationAndMOGeneration workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="ROAutomation_Modules\PORegistrationAndMOGeneration.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrChannel">[strChannelName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrBookingPeriod">[strCurrentBookingMonth]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrStartDate">[outstrStartDate]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrEndDate">[outstrEndDate]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrDealID">[strDealID]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrGSTIN">[strGSTIN]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrRONumber">[strROID]</InArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="outStrMOID">[strMOID]</OutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrClientName">[strClientName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="inStrBrandName">[strBrandName]</InArgument>
                                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="outBCreditControlApproval">[bCreditControlApproval]</OutArgument>
                                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </State.Entry>
                                              <State.Transitions>
                                                <Transition DisplayName="Trigger ApproveTraffic" sap2010:WorkflowViewState.IdRef="Transition_25" Condition="[outBStatus and bCreditControlApproval]">
                                                  <Transition.To>
                                                    <State x:Name="__ReferenceID3" DisplayName="ApproveTraffic" sap2010:WorkflowViewState.IdRef="State_18">
                                                      <State.Entry>
                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ApproveTraffic workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="ROAutomation_Modules\ApproveTraffic.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="inStrMONumber">[strMOID]</InArgument>
                                                            <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </State.Entry>
                                                      <State.Transitions>
                                                        <Transition DisplayName="Trigger Exception" sap2010:WorkflowViewState.IdRef="Transition_21" Condition="[Not outBStatus]">
                                                          <Transition.To>
                                                            <State x:Name="__ReferenceID0" DisplayName="exception" sap2010:WorkflowViewState.IdRef="State_15" IsFinal="True">
                                                              <State.Entry>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[outBStatus]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="Found exception while processing Invoke Dentsu PDF Module" />
                                                                </Sequence>
                                                              </State.Entry>
                                                            </State>
                                                          </Transition.To>
                                                        </Transition>
                                                        <Transition DisplayName="Trigger SpotBookingMatrix" sap2010:WorkflowViewState.IdRef="Transition_24" Condition="[outBStatus]">
                                                          <Transition.To>
                                                            <State x:Name="__ReferenceID1" DisplayName="SpotBookingMatrix" sap2010:WorkflowViewState.IdRef="State_17">
                                                              <State.Entry>
                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SpotBookingMatrix workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="ROAutomation_Modules\SpotBookingMatrix.xaml">
                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                    <InArgument x:TypeArguments="sd:DataTable" x:Key="inDTROTable">[dtROTableCopy]</InArgument>
                                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="ioDTStatusReportTable">[dtStatusReportTable]</InOutArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="inStrMOID">[strMOID]</InArgument>
                                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="inBCreditControlTeamApproval">[bCreditControlApproval]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="inStartEndIndex" />
                                                                    <InArgument x:TypeArguments="sd:DataTable" x:Key="inMissingFieldsTable">[intMissingFieldsTable]</InArgument>
                                                                    <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                </ui:InvokeWorkflowFile>
                                                              </State.Entry>
                                                              <State.Transitions>
                                                                <Transition DisplayName="Trigger Completion" sap2010:WorkflowViewState.IdRef="Transition_22" Condition="[outBStatus]">
                                                                  <Transition.To>
                                                                    <State x:Name="__ReferenceID4" DisplayName="Completion" sap2010:WorkflowViewState.IdRef="State_16" IsFinal="True">
                                                                      <State.Entry>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                                          <Sequence.Variables>
                                                                            <Variable x:TypeArguments="x:Boolean" Name="bFileExist" />
                                                                            <Variable x:TypeArguments="x:Boolean" Name="bChanelExist" />
                                                                          </Sequence.Variables>
                                                                          <ui:ClickImage ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image  Search" sap2010:WorkflowViewState.IdRef="ClickImage_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False">
                                                                            <ui:ClickImage.CursorPosition>
                                                                              <ui:CursorPosition Position="Center">
                                                                                <ui:CursorPosition.OffsetX>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetX>
                                                                                <ui:CursorPosition.OffsetY>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetY>
                                                                              </ui:CursorPosition>
                                                                            </ui:ClickImage.CursorPosition>
                                                                            <ui:ClickImage.Image>
                                                                              <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAACwAAAAOCAYAAABU4P48AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAD9SURBVEhL7ZPRDYQgDIaZinkYxTcWcAgTNnAGwwjOwAY9iuVsseqZnMmZ3MP/oH/5+UrBpJTgSfoD360fAw4wGAeT6i2SwNFDbwx0XC6IBffqEjAWWxgjLzgP+K6uAOPpWg8zMzdqJtD7SF6E0bKpZA2hrkMvH4R35BGQmrUAD679X7OaKzEdFG67JxAxEVKBqbXUjLha7TTzd/HxP2tW5CzafXQrPC0I9YSk3uEbnwM3jWGt+jbOD2UXuArBC9TuJuSJjfjGdwGrITygGVfW7K3ejGhAAS6j5v9ydll/BbiYfKQobSPur+H8/ncuP5wjYNTBo/sQ+Bl6GHCCFyBdTvZGYf3oAAAAAElFTkSuQmCC" />
                                                                            </ui:ClickImage.Image>
                                                                            <ui:ClickImage.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='gen21.exe' cls='FNWND*' title='Gen 21*' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:ClickImage.Target>
                                                                          </ui:ClickImage>
                                                                          <ui:ImageFound DisplayName="Image Exists 'gen21.exe Gen'" Found="[bChanelExist]" sap2010:WorkflowViewState.IdRef="ImageFound_3">
                                                                            <ui:ImageFound.Image>
                                                                              <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAFIAAAAMCAYAAADxqOocAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAFnSURBVFhH7VUxDsIwDMynkHhOxUuYGJj7h0oszPwBMXTnDUzMxk5o4zi1kwiEhNThpNLrXXyXtLjH4wkrPsda5JewFvklVBR5hsHt4LrI/Rq/nqV+vVDk7Qi9c7BPMBn8YZFmnha0FHna4SJbuNxS4n7YQn8Y8frPiizmSe/baChyWFg0RTAburi7caARLhu+6w6GU43O4hDiREmdHoz4Uh6ELzv6x5lzLjnJ6lxYZL85wn16cBE0HFvMmylhEs7SlTjuT5s1lSM5AfIp5fFr8bLJk/tLrmau6iJ1A30HLZ3BZX4BoXSm84VM/FtbUyT5d+fk3hXfDO+fcWw9c66GV1sPzTn+rKEreYqgEVInQXwhzydFqnNhkfQRXvo4kzB8AxpC0+/5WUNX5Nhrj6AZsxOpoJhHvtr8t79m/lkebS4sMprJY8sNtNBhN2dNh38gVTrbM59H81Rg5sl5Wc6sSfLkuuj5hBerSweqgILObAAAAABJRU5ErkJggg==" />
                                                                            </ui:ImageFound.Image>
                                                                            <ui:ImageFound.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='gen21.exe' cls='FNWND*' title='Gen 21*' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                                                                            </ui:ImageFound.Target>
                                                                          </ui:ImageFound>
                                                                          <If Condition="[bChanelExist]" sap2010:WorkflowViewState.IdRef="If_6">
                                                                            <If.Then>
                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:Boolean">[outBStatus]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="Bot has completed the Invoke Vibrant PDF module successfully without any exception" />
                                                                              </Sequence>
                                                                            </If.Then>
                                                                            <If.Else>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[outBStatus]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </If.Else>
                                                                          </If>
                                                                        </Sequence>
                                                                      </State.Entry>
                                                                    </State>
                                                                  </Transition.To>
                                                                </Transition>
                                                                <Transition DisplayName="Trigger Exception" sap2010:WorkflowViewState.IdRef="Transition_23" To="{x:Reference __ReferenceID0}" Condition="[Not outBStatus]" />
                                                              </State.Transitions>
                                                            </State>
                                                          </Transition.To>
                                                        </Transition>
                                                      </State.Transitions>
                                                    </State>
                                                  </Transition.To>
                                                </Transition>
                                                <Transition DisplayName="Trigger Exception" sap2010:WorkflowViewState.IdRef="Transition_26" To="{x:Reference __ReferenceID0}" Condition="[Not outBStatus]" />
                                                <Transition DisplayName="Trigger SpotBookingMatrix" sap2010:WorkflowViewState.IdRef="Transition_27" To="{x:Reference __ReferenceID1}" Condition="[outBStatus and not bCreditControlApproval]" />
                                              </State.Transitions>
                                            </State>
                                          </StateMachine.InitialState>
                                          <x:Reference>__ReferenceID2</x:Reference>
                                          <x:Reference>__ReferenceID3</x:Reference>
                                          <x:Reference>__ReferenceID1</x:Reference>
                                          <x:Reference>__ReferenceID0</x:Reference>
                                          <x:Reference>__ReferenceID4</x:Reference>
                                        </StateMachine>
                                        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="sd:DataTable">[dtROTableCopy]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[New System.Data.
DataTable()]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                        </ui:CommentOut>
                                        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="sd:DataTable">[dtROTableCopy1]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[New System.Data.
DataTable()]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                        </ui:CommentOut>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[outBStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Trigger Exception" sap2010:WorkflowViewState.IdRef="Transition_6" Condition="[Not outBStatus]">
                            <Transition.To>
                              <State x:Name="__ReferenceID5" DisplayName="exception" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                                <State.Entry>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="Found exception while processing Invoke Vibrant PDF Module" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenShotModule workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Generic_Modules\TakeScreenShotModule.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailmodule workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Email_Modules\SendExceptionEmail.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strROID">[strROID]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                                        <InArgument x:TypeArguments="snm:MailMessage" x:Key="inMailMsg">[inMailMsg]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[outBStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </State.Entry>
                              </State>
                            </Transition.To>
                          </Transition>
                          <Transition DisplayName="Trigger Completion" sap2010:WorkflowViewState.IdRef="Transition_28" Condition="[outBStatus]">
                            <Transition.To>
                              <State x:Name="__ReferenceID8" DisplayName="Completion" sap2010:WorkflowViewState.IdRef="State_2" IsFinal="True">
                                <State.Entry>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Boolean" Name="bFileExist" />
                                      <Variable x:TypeArguments="x:Boolean" Name="bChanelExist" />
                                    </Sequence.Variables>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Sequence workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Generic_Modules\GenerateReport.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="dtStatusReportTable">[dtStatusReportTable]</InArgument>
                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="bFileExist">[bFileExist]</InOutArgument>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendReportEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Email_Modules\SendReportEmail.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="strBrandName">[strBrandName]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="outBStatus">[outBStatus]</OutArgument>
                                        <InArgument x:TypeArguments="snm:MailMessage" x:Key="inMailMsg">[inMailMsg]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="inStrRONumber">[strROID]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[outBStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="Bot has completed the Invoke Vibrant PDF module successfully without any exception" />
                                  </Sequence>
                                </State.Entry>
                              </State>
                            </Transition.To>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition DisplayName="Trigger Exception" sap2010:WorkflowViewState.IdRef="Transition_8" To="{x:Reference __ReferenceID5}" Condition="[Not outBStatus]" />
                </State.Transitions>
              </State>
            </Transition.To>
          </Transition>
          <Transition DisplayName="Trigger Exception" sap2010:WorkflowViewState.IdRef="Transition_29" To="{x:Reference __ReferenceID5}" Condition="[not outBStatus]" />
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:String" Name="strChannelName" />
      <Variable x:TypeArguments="x:String" Name="strBookingMonth" />
      <Variable x:TypeArguments="x:String" Name="strBookingStartDate" />
      <Variable x:TypeArguments="x:String" Name="strBookingEndDate" />
      <Variable x:TypeArguments="x:String" Name="strDealID" />
      <Variable x:TypeArguments="x:String" Name="strGSTIN" />
      <Variable x:TypeArguments="x:String" Name="strROID" />
      <Variable x:TypeArguments="x:String" Name="strMOID" />
      <Variable x:TypeArguments="x:String" Name="strBrandName" />
      <Variable x:TypeArguments="x:Boolean" Name="bCreditControlApproval" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtStatusReportTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtROTable" />
      <Variable x:TypeArguments="x:String" Name="strClientName" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.Data.DataTable()]" Name="dtROTableCopy" />
      <Variable x:TypeArguments="x:Int32" Name="intRowIndex" />
      <Variable x:TypeArguments="x:Int32" Name="intMonthStartIndex" />
      <Variable x:TypeArguments="x:Int32" Name="intMonthEndIndex" />
      <Variable x:TypeArguments="scg:List(x:Int32)" Name="listMonthRowStartIndexes" />
      <Variable x:TypeArguments="x:String" Name="strCurrentBookingMonth" />
      <Variable x:TypeArguments="x:String" Name="outstrStartDate" />
      <Variable x:TypeArguments="x:String" Name="outstrEndDate" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new System.Data.DataTable()]" Name="dtROTableCopy1" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d4YBQzpcVXNlcnNcdG5yb1xEb2N1bWVudHNcVWlQYXRoXFRpbWVzTm93X1JPQXV0b21hdGlvbl9MaXZlXzE0LTA1LTIwMTlcUk9BdXRvbWF0aW9uX01vZHVsZXNcVmlicmFudFBERk1vZHVsZVxWaWJyYW50UERGSW52b2tlTW9kdWxlLnhhbWyzAlgD1QYSAgEBygY4ygZXAwHXA9IGONIGVwMB1gNtD7AGFwMBpAOQARerBh8CAUvlBR+ABicCATSFBh+nBicCARdaB7UGDwIBAm8TiwEeAwGrA44BjAGOAZoBAwGoA64GmgGuBqwBAwGmA5IBG+AFJgIBUuMFgAHjBZIBAgFPgwaCAYMGkAECAU3nBSP+BS4CATaHBiOlBi4CARlcC2gWAgEJa29rfQIBBrMGkwGzBqUBAgEEcBVwnwEDAdQDcRWKASADAawDkwEd3wUoAgFT6AUl6AXSAQIBSekFJe0FPQIBRe4FJfUFPQIBO/YFJf0FLgIBN4wGJZIGPQIBLJMGJZsGPQIBIJwGJaMGLgIBHKQGJaQG6QECARpdDV2fAQIBFV4NZxgCAQpwgwFwnAEDAdUDcheJAS8DAa0DmAEhzAUuAgFY1AUl2wUuAgFU6AWTAegFzwECAUrrBWXrBXECAUfpBeEB6QWMAgIBRvMFafMFdAIBQ/AFYPAFaQIBQfIFZfIFcQIBP/EFefEFgQECAT3uBdwB7gWDAgIBPPsFUfsFVgIBOvgFUvgFXgIBOI8GZ48GcwIBMo4GcI4GhQECATCQBmWQBnECAS6MBtUBjAb6AQIBLZgGaZgGdAIBKpUGZZUGcwIBKJcGZZcGcQIBJpYGeZYGgQECASSZBmaZBm8CASKTBtwBkwaAAgIBIaEGUaEGVQIBH54GUp4GXgIBHaQGkgGkBuYBAgEbXXtdnAECARZfD2YnAgELe1d7ZQMB0gOAAViAAWMDAdADeF94cAMBzgODAV6DAW8DAcwDdll2bAMBygN0X3RqAwHIA31ZfWkDAcYDfFh8ZwMBxAN6WnpjAwHCA4cBcIcBigEDAcADhAFmhAF7AwG+A4UBV4UBYwMBvAN1W3VwAwG6A4IBWIIBYwMBuAOBAVeBAWEDAbYDf2V/fAMBtAN+an6MAQMBsgNy0AFyigIDAbEDhgFXhgHPAQMBsAN3YXd6AwGuA5gBsQGYAeUBAwGiA5gBVZgBZAMBoAOeASfJBTICAVnZBVHZBVYCAVfWBVLWBV4CAVVhVmF7AgETYlpicwIBEWNPY1sCAQ9kTmRbAgENX8IBX/4BAgEMogEpqQEyAwGbA6oBKbEBMgMBlwOyASm5ATIDAZIDugEpwQEyAwGOA8IBKckBMgMBiAPKASnfAS4DAfoC4AEp5wEyAwH2AugBKYECOQMB3gKCAimJAjIDAdkCigIpigK6AQMB1gKLAinhAzQDAdsB4gMp4gO7AQMB1gHjAynjA+0BAwHUAeQDKaoFOAIBXKsFKbkFOQIBW7oFKcgFOQIBWqcBWKcBawMBngOkAVmkAWgDAZwDrwFYrwF+AwGaA6wBWawBaAMBmAO3AVi3AWsDAZUDtAFZtAFpAwGTA78BWL8BfgMBkQO8AVm8AWkDAY8DxwFTxwF6AwGLA8QBVMQBaAMBiQPKATfKAYUBAwH7AswBLdMBNgMBggPWAS3dATYDAf4C5QFT5QFUAwH5AuIBVOIBaQMB9wLoAUXoAVQDAfQC6AFf6AFxAwHyAu4BL/4BOgMB3wKHAlSHAloDAdwChAJVhAJtAwHaAooCgAGKArcBAwHXAo4CWY4CXAMB3AGTAiv0AjYDAZ8C9QIr1wM2AwHlAdgDK98DNAMB3wHgAyvgA70BAwHdAeIDsgHiA7gBAwHZAeIDR+IDWAMB1wHjA4AB4wPqAQMB1QHmAy2jBTUDAaQBpwQ1nQU9AwGXAcYEPZkFRQMBgAGzBD3BBEUCAXfYBEWUBU0CAV3RAVfRAYIBAwGFA84BWM4BagMBgwPbAVfbAXMDAYED2AFY2AFqAwH/Au8BMf0BNgMB4AKUAi3eAjUDAa8C3wIt6gIyAwGnAusCLfICNgMBowLzAi3zArcBAwGgAvYCLf0CNgMBmwL+Ai3BAzUDAfUBwgMtzQMyAwHtAc4DLdUDNgMB6QHWAy3WA68BAwHmAd0DXd0DfAMB4gHaA17aA3UDAeAB4AOCAeADugEDAd4B6AMxogQ8AwGvAaUEnAGlBMUBAwGrAaAFuQGgBcsBAwGpAaEFwQGhBe4BAwGmAakEOa4EUQMBngGxBJ8BsQSxAQMBmwHEBKcBxAS1AQMBmQHIBEHTBFkDAYcB1gSoAdYEtgEDAYQBlwXJAZcF2wEDAYIBtQRBvwRMAgF52gRJkgVUAgFf7wE/7wGKAQMB4QLxATX7AUADAeYCmQIv3QI6AwGxApgCQJgCdgMBsALfAjvfAl4DAagC4QIx6AI6AwGqAvACWPAC7QEDAaYC7QJZ7QJqAwGkAvMChAHzArQBAwGhAvsCV/sCWQMBngL4Alj4Am0DAZwCgwMvwAM6AwH4AYIDQIIDWwMB9gHCAzvCA1wDAe4BxAMxywM6AwHwAdMDWNMD6wEDAewB0ANZ0ANoAwHqAdYDhAHWA6wBAwHnAekDM5AEPgMBzAGRBDORBN0BAwHKAZIEM6EESwMBsAGsBHmsBIUBAwGiAasEeqsEgwEDAaABqQTwAakEmgIDAZ8B0ASNAdAEpAEDAZUBygSEAcoEkwEDAZMB0QSBAdEEjQEDAZEBzgSSAc4EqgEDAY8BywSYAcsEoAEDAY0BzASRAcwEpgEDAYsByAT7AcgEqAIDAYoBzQR+zQSHAQMBiAG2BEO9BEwCAXy+BEO+BO8BAgF63wRL8ARbAgF08QRL+ARbAgFu+QRLkQVQAgFg8gE38gHzAQMB7ALzATf6AUADAecCmgIxoQI6AwHSAqICMdQCOQMBtwLVAjHcAjoDAbIC5gJc5gJ4AwGtAuMCXeMCbAMBqwKEAzGLAzoDAZcCjAMxtwM5AwH+AbgDMb8DOgMB+QHJA1zJA20DAfMBxgNdxgNqAwHxAeoDNY8EQAMBzQGRBKABkQTaAQMBywGZBHGZBHsDAcgBngSCAZ4EmgEDAcYBmwRymwR7AwHEAZ8Ec58EfwMBwgGYBHKYBH0DAcABlwRzlwSCAQMBvgGdBHWdBIMBAwG8AZUEeZUEkQEDAboBlgR1lgSGAQMBuAGaBHSaBH0DAbYBkgT5AZIEsgIDAbUBnAR2nASFAQMBswGUBHOUBIMBAwGxAbsEb7sEdAIBf7gEcLgEfAIBfb4EsQG+BOwBAgF77gSlAe4E4QECAXbrBHnrBH4CAXX2BJAB9gTMAQIBc/YE1wH2BN0BAgFy8QSLAfEEmwECAXDzBHnzBH4CAW/5BFn5BGkCAWH7BE+FBVoCAWeIBU+PBVgCAWPyAc0B8gHwAQMB7wLyAWLyAXMDAe0C+AFh+AF4AwHqAvUBYvUBdwMB6AKfAlufAlwDAdUCnAJcnAJuAwHTAqMCM9MCOAMBuQKiAmyiApwBAwG4AtoCW9oCcgMBtQLXAlzXAnEDAbMCiQNbiQN3AwGaAoYDXIYDbgMBmAKNAzO2AzgDAYECjANsjAOGAQMB/wG9A1u9A3IDAfwBugNcugNxAwH6AesDN/wDRwMB0QH9AzeOBEcDAc4B/ARRgwVaAgFqhAVRhAWVAgIBaI0Fe40FgAECAWaKBXyKBYgBAgFkowJBowL6AQMBugKlAjesAkADAc0CrwI30QJCAwG7Ao0DQY0D+gEDAYICjwM3mANCAwGRApsDN7QDQgMBgwL6A5EB+gPHAQMB0wH3A2X3A2oDAdIBjASRAYwEvQEDAdABiQRliQRqAwHPAYEFfYEFgQECAW3+BH7+BIoBAgFrhAW+AYQFkgICAWmqAmGqAnUDAdACpwJipwJ0AwHOArMCOdACPgMBvAKQAzmXA0IDAZICnAM5owNCAwGMAqQDOasDQgMBiAKsAzmzA0IDAYQCswJHswJXAwG9ArUCPc4CSAMBvwKVA2OVA3cDAZUCkgNkkgN2AwGTAqEDZKEDhgEDAY8CngNlngNyAwGNAqkDY6kDZQMBiwKmA2SmA3YDAYkCsQNjsQNlAwGHAq4DZK4DeQMBhQK2Aj+9AkgDAcgCvgI/xQJIAwHEAsYCP80CSAMBwAK7Amq7AowBAwHLArgCa7gCegMByQLDAmnDAoUBAwHHAsACasACfAMBxQLLAmnLAoYBAwHDAsgCasgCfwMBwQI=</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="222,175">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="222,266">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_10" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222,175">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="516,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="RemoveDataRow_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="486,518">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="516,666">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="516,61" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,532" />
      <sap2010:ViewStateData Id="Sequence_51" sap:VirtualizedContainerService.HintSize="486,656">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="753,804">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="264,375">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="464,533">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="464,61" />
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="649,949">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="627,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="579,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="553,532">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="579,690">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="579,60" />
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="601,1014">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_4" sap:VirtualizedContainerService.HintSize="627,1172">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="627,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="627,60" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="627,61" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="649,1688">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="649,60" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="649,61" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="516,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="OutputDataTable_1" sap:VirtualizedContainerService.HintSize="516,22" />
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="516,61" />
      <sap2010:ViewStateData Id="ClickImage_8" sap:VirtualizedContainerService.HintSize="314,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ClickImage_9" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="336,376">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="358,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="358,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_22" sap:VirtualizedContainerService.HintSize="358,87" />
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="380,882">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_15" sap:VirtualizedContainerService.HintSize="174,82">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">450,692.5</av:Point>
            <av:Size x:Key="ShapeSize">174,82</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">160</x:Double>
            <x:Double x:Key="StateContainerHeight">45.917209302325489</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">174,448.3 545.7,448.3 545.7,692.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">44</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ClickImage_10" sap:VirtualizedContainerService.HintSize="603,51" />
      <sap2010:ViewStateData Id="ImageFound_3" sap:VirtualizedContainerService.HintSize="603,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="603,463">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="625,769">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_16" sap:VirtualizedContainerService.HintSize="651,882">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">27,698</av:Point>
            <av:Size x:Key="ShapeSize">166,84</av:Size>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Double x:Key="StateContainerWidth">152</x:Double>
            <x:Double x:Key="StateContainerHeight">48</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">110,644 110,698</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">196.5,604.4 226.5,604.4 226.5,737.6 450,737.6</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_17" sap:VirtualizedContainerService.HintSize="173,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">23.5,556</av:Point>
            <av:Size x:Key="ShapeSize">173,88</av:Size>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Double x:Key="StateContainerWidth">159</x:Double>
            <x:Double x:Key="StateContainerHeight">51.677117877600125</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">90,481.5 90,511.5 92.7,511.5 92.7,556</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">30</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_18" sap:VirtualizedContainerService.HintSize="168,83">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">6,398.5</av:Point>
            <av:Size x:Key="ShapeSize">168,83</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">154</x:Double>
            <x:Double x:Key="StateContainerHeight">46.661441061199724</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">90,346 90,398.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">176,310 571.8,310 571.8,692.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">54</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">4,313.6 -26,313.6 -26,595.6 23.5,595.6</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">41</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">33</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_19" sap:VirtualizedContainerService.HintSize="172,72">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">4,274</av:Point>
            <av:Size x:Key="ShapeSize">172,72</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">158</x:Double>
            <x:Double x:Key="StateContainerHeight">36.488694603557377</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_3" sap:VirtualizedContainerService.HintSize="657,818">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <x:Double x:Key="StateContainerWidth">643</x:Double>
            <x:Double x:Key="StateContainerHeight">782</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">270,47.5 90,47.5 90,274</av:PointCollection>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="516,64" />
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="516,51" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="516,64" />
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="516,51" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="538,2366">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="554,2500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="558,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="572,2727">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="594,2565">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="336,569">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="174,82">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">450,692.5</av:Point>
            <av:Size x:Key="ShapeSize">174,82</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">160</x:Double>
            <x:Double x:Key="StateContainerHeight">45.917209302325489</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">176,310 571.8,310 571.8,692.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">54</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,51" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,51" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,493">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="166,84">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">27,428</av:Point>
            <av:Size x:Key="ShapeSize">166,84</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">152</x:Double>
            <x:Double x:Key="StateContainerHeight">48</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">98.6,346 98.6,376 93.4,376 93.4,428</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">30</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_5" sap:VirtualizedContainerService.HintSize="172,72">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">4,274</av:Point>
            <av:Size x:Key="ShapeSize">172,72</av:Size>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Double x:Key="StateContainerWidth">158</x:Double>
            <x:Double x:Key="StateContainerHeight">36.488694603557377</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,507">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">90,227 90,274</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">177,180 597.9,180 597.9,692.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">66</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_6" sap:VirtualizedContainerService.HintSize="174,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">3,133</av:Point>
            <av:Size x:Key="ShapeSize">174,94</av:Size>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Double x:Key="StateContainerWidth">160</x:Double>
            <x:Double x:Key="StateContainerHeight">58.40438146919891</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">23,45.5 20.4,45.5 20.4,133</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">37</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">6</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">145.4,78 145.4,108 537,108 537,692.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">63</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_7" sap:VirtualizedContainerService.HintSize="153,65">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">23,13</av:Point>
            <av:Size x:Key="ShapeSize">153,65</av:Size>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Double x:Key="StateContainerWidth">139</x:Double>
            <x:Double x:Key="StateContainerHeight">29.079999999999984</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="657,818">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <x:Double x:Key="StateContainerWidth">643</x:Double>
            <x:Double x:Key="StateContainerHeight">782</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,105.5 206,105.5 206,45.5 176,45.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeGroupMModule_1" sap:VirtualizedContainerService.HintSize="697,898">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>